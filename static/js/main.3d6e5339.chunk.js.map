{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Header.js","components/Scroll.js","components/ErrorBoundry.js","apiCall/apiCall.js","actions/constants.js","containers/App.js","actions/actions.js","reducers/reducer.js","index.js"],"names":["Card","name","email","id","className","alt","src","width","CardList","catsList","map","catsItem","index","SearchBox","onSearchChange","type","placeholder","onChange","Header","Scroll","children","style","overflowY","border","height","ErrorBoundry","props","state","hasError","error","info","this","setState","Component","apiCall","link","fetch","then","resp","json","CHANGE_SEARCH_FIELD","CATS_INFO_FETCHED","CATS_INFO_FETCH_ERROR","connect","searchField","searchCat","fetchCatsInfo","isPending","dispatch","event","text","target","value","payload","fetchCatsList","data","Object","keys","length","cats","catch","e","message","AppProps","useEffect","filterCatsList","filter","cat","toLowerCase","includes","initialStateSearch","initialStateFetch","logger","createLogger","rootReducer","combineReducers","action","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3d6e5339.chunk.js","sourcesContent":["import React from 'react'\n\nconst Card = ({name, email, id}) => {\n    return (\n        <div className=\"tc card-style-custom grow dib pa3 br3 ma3 bw3 shadow-5\">\n            <img alt=\"avatar\" src={`https://robohash.org/${id}?set=set4`} width=\"150\" />\n            <h2>{name}</h2>\n            <p>{email}</p>\n        </div>\n    )\n}\n\nexport default Card","import React from 'react'\nimport Card from './Card'\n\nconst CardList = ( {catsList} ) => {\n    return (\n        <section className=\"flex justify-center items-center flex-wrap ma3 pv3\">\n            { catsList.map( (catsItem, index) => {\n                return <Card\n                    key={index}\n                    id={catsItem.id}\n                    name={catsItem.name}\n                    email={catsItem.email}\n                />\n            })\n            }\n        </section>\n    )\n}\n\nexport default CardList","import React from 'react'\n\nconst SearchBox = ({onSearchChange}) => {\n    return (\n        <input\n            className=\"input-style-custom br3 pa2 input-reset shadow-2\"\n            type=\"search\"\n            placeholder=\"Search Cats\"\n            onChange={onSearchChange}\n        />\n    )\n}\n\nexport default SearchBox","import React from 'react';\nimport SearcBox from './SearchBox'\n\nconst Header = ({onSearchChange}) => {\n    return (\n        <header className=\"flex justify-center items-center flex-column shadow-5 pv4 header-style-custom\">\n            <h1 className=\"heading-style-custom f1 mb4 mt0\">Cats Friends</h1>\n            <SearcBox onSearchChange={onSearchChange} />\n        </header>\n    )\n}\n\nexport default Header","import React from 'react'\n\nconst Scroll = ({children}) => {\n    return (\n        <div style={{overflowY: 'scroll', border: '1px solid var(--main-color)', height: '100vh'}}>\n            {children}\n        </div>\n    )\n}\n\nexport default Scroll","import React, {Component} from 'react'\n\nclass ErrorBoundry extends Component{\n    constructor(props){\n        super(props)\n        this.state = {\n            hasError: false\n        }\n    }\n\n    componentDidCatch(error, info){\n        this.setState({ hasError: true})\n    }\n\n    render(){\n        if(this.state.hasError){\n            return <h1 className=\"error-font tc\">Ooooooops! Something Went Wrong</h1>\n        } else{\n            return this.props.children\n        }\n    }\n}\n\nexport default ErrorBoundry\n","const apiCall = (link) => fetch(link).then(resp => resp.json())\n\nexport default apiCall","export const CHANGE_SEARCH_FIELD = 'CHANGE_SEARCH_FIELD'\nexport const CATS_INFO_FETCHED = 'CATS_INFO_FETCHED'\nexport const CATS_INFO_FETCH_ERROR = 'CATS_INFO_FETCH_ERROR'","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport CardList from '../components/CardList'\nimport Header from '../components/Header'\nimport Scroll from '../components/Scroll'\nimport './App.css'\nimport ErrorBoundry  from '../components/ErrorBoundry'\nimport { setSearchField, setCatsList } from '../actions/actions'\n\nconst mapStateToProps = state => {\n    return {\n        searchField: state.searchCat.searchField,\n        catsList: state.fetchCatsInfo.catsList,\n        isPending: state.fetchCatsInfo.isPending,\n        error: state.fetchCatsInfo.error,\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onSearchChange: (event) => dispatch(setSearchField(event.target.value)),\n        fetchCatsList: () => dispatch(setCatsList())\n    }\n}\n\n\nconst App = (AppProps) => {\n    const { onSearchChange, searchField, fetchCatsList, catsList, isPending, error } = AppProps\n    \n    useEffect(()  => fetchCatsList(), [fetchCatsList])\n\n    const filterCatsList = catsList.filter( cat => cat.name.toLowerCase().includes(searchField.toLowerCase()))\n\n    return (\n        <>\n            <Header onSearchChange={onSearchChange} />\n            <Scroll>\n                {\n                    isPending ?\n                        <h1 className=\"heading-style-custom tc\">Loading</h1> :\n                        (\n                            error ? \n                                <h1 className=\"tc\">Error: {error}</h1>  : \n                                (   \n                                    !catsList.length ?\n                                        <h1 className=\"heading-style-custom tc\">There are no cats friends sadly!</h1> :\n                                        <ErrorBoundry>\n                                            <CardList catsList={filterCatsList} />\n                                        </ErrorBoundry>\n                                )\n                        )\n                }\n            </Scroll>\n        </>\n    )\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App)\n","import apiCall from \"../apiCall/apiCall\"\nimport { \n    CHANGE_SEARCH_FIELD,\n    CATS_INFO_FETCHED,\n    CATS_INFO_FETCH_ERROR,\n} from \"./constants\"\n\nexport const setSearchField = (text) => ({ \n    type: CHANGE_SEARCH_FIELD, \n    payload: text\n})\n\nexport const setCatsList = () => (dispatch) => { \n    apiCall('https://jsonplaceholder.typicode.com/users')\n    .then(data => typeof data === 'object' && Object.keys(data).length === 0 ? [] : data)\n    .then(cats => dispatch({type: CATS_INFO_FETCHED, payload: cats}))\n    .catch( e => dispatch({type: CATS_INFO_FETCH_ERROR, error: e.message}))\n}\n\n\n","import { \n    CHANGE_SEARCH_FIELD,\n    CATS_INFO_FETCHED,\n    CATS_INFO_FETCH_ERROR,\n} from \"../actions/constants\"\n\nconst initialStateSearch = {\n    searchField: '',\n}\n\nexport const searchCat = (state = initialStateSearch, action = {}) => {\n    switch(action.type){\n        case CHANGE_SEARCH_FIELD:\n            return { ...state, searchField: action.payload }\n        default:\n            return state\n    }\n}\n\nconst initialStateFetch = {\n    catsList: [],\n    isPending: true,\n    error: ''\n}\n\nexport const fetchCatsInfo = (state = initialStateFetch, action = {}) => {\n    switch(action.type){\n        case CATS_INFO_FETCHED:\n            return { ...state, catsList: action.payload, isPending: false }\n        case CATS_INFO_FETCH_ERROR:\n            return { ...state, isPending: false, error: action.error }\n        default:\n            return state\n    }\n}","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './containers/App'\nimport 'tachyons'\nimport { Provider } from 'react-redux'\nimport { applyMiddleware, createStore, combineReducers } from 'redux'\nimport { searchCat, fetchCatsInfo } from './reducers/reducer'\nimport { createLogger } from 'redux-logger'\nimport thunkMiddleware from 'redux-thunk'\n\nconst logger = createLogger();\n\nconst rootReducer = combineReducers({searchCat, fetchCatsInfo})\n\nconst store = createStore(rootReducer, applyMiddleware(thunkMiddleware, logger))\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <App />\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n)\n"],"sourceRoot":""}